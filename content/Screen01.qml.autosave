import QtQuick 2.15
import QtQuick.Controls 2.15
import QtQuick.Window 2.15
import QtQuick.Layouts 1.15
import Qt.labs.qmlmodels 1.0

Rectangle {
    id: backgroundComponent
    width: 1280
    height: 800
    visible: true
    
    Image {
        id: backgroundImage
        anchors.fill: parent
        source: "../background_image.jpg"
        sourceSize.width: 1280
        anchors.rightMargin: 0
        anchors.bottomMargin: 0
        anchors.leftMargin: 0
        anchors.topMargin: 0
        fillMode: Image.Stretch
        
        RoundButton {
            id: dashboardButton1
            x: 30
            y: 225
            width: 200
            height: 46
            radius: 12
            text: qsTr("Dashboard")
            onClicked: {
                sidebarActions.handleSidebarButton('dashboard')
            }
            icon.width: 22
            icon.source: "qrc:/assets/images/dashboard_icon.png"
            highlighted: false
            font.weight: Font.Medium
            font.pointSize: 13
            font.italic: false
            font.bold: true
            flat: false
        }
        
        RoundButton {
            id: configurationButton1
            x: 30
            y: 285
            width: 200
            height: 46
            radius: 12
            text: qsTr("Configuration")
            onClicked: {
                sidebarActions.handleSidebarButton('list_configurations')
            }
            icon.width: 22
            icon.source: "qrc:/assets/images/configuration_icon.png"
            icon.color: "#00000000"
            font.weight: Font.Medium
            font.pointSize: 13
            font.italic: false
            font.bold: true
        }
        
        RoundButton {
            id: dataLogsButton1
            x: 30
            y: 345
            width: 200
            height: 46
            radius: 12
            text: qsTr("Data Logs")
            onClicked: {
                sidebarActions.handleSidebarButton(dataLogsButton1.text)
            }
            icon.width: 22
            icon.source: "qrc:/assets/images/data_logs_icon.png"
            icon.color: "#00000000"
            font.weight: Font.Medium
            font.pointSize: 13
            font.italic: false
            font.bold: true
        }
        
        RoundButton {
            id: storageButton1
            x: 30
            y: 405
            width: 200
            height: 46
            radius: 12
            text: qsTr("Data Dump")
            onClicked: {
                sidebarActions.handleSidebarButton(storageButton1.text)
            }
            icon.width: 22
            icon.source: "qrc:/assets/images/storage_icon.png"
            icon.color: "#00000000"
            font.weight: Font.Medium
            font.pointSize: 13
            font.italic: false
            font.bold: true
        }
        
        RoundButton {
            id: settingsButton1
            x: 30
            y: 465
            width: 200
            height: 46
            radius: 12
            text: qsTr("Settings")
            onClicked: {
                sidebarActions.handleSidebarButton(settingsButton1.text)
            }
            icon.width: 22
            icon.source: "qrc:/assets/images/settings_icon.png"
            icon.color: "#00000000"
            font.weight: Font.Medium
            font.pointSize: 13
            font.italic: false
            font.bold: true
        }
        
        Rectangle {
            id: commandResponseRectangle
            x: 260
            y: 0
            width: 1020
            height: 800
            opacity: 1
            color: "#00000000"
            border.color: "#00000000"
            
            property var alertDialog
            
            Connections {
                target: dataDump
                function onShowAlertSignal(message, alertType) {
                    showAlert(message, alertType)
                }
                function onDataDumpStatusUpdate(elapsedTime, fileCount, fileSize) {
                    runningFor.text = elapsedTime
                    filesCreated.text = fileCount
                    currentFileSize.text = fileSize
                }
            }
            
            Dialog {
                id: alertDialog
                parent: ApplicationWindow.overlay
                x: (parent.width - width) / 2
                y: (parent.height - height) / 2
                height: 200
                width: 400
                focus: true
                modal: true
                title: ""
                
                property alias text: messageText.text
                
                Label {
                    id: messageText
                    verticalAlignment: Text.AlignVCenter
                    horizontalAlignment: Text.AlignHCenter
                }
                
                Row {
                    spacing: 10
                    x: (parent.width - width) / 2 + 120
                    y: (parent.height - height) / 2 + 20
                    RoundButton {
                        width: 100
                        height: 35
                        radius: 8
                        text: "<font color='#fefefe'> Okay </font>"
                        onClicked: {
                            alertDialog.close();
                        }
                        font.pointSize: 12
                        background: Rectangle {
                            color: "#6C757D"
                            radius: 8
                        }
                    }
                }
            }
            
            // Function to show the alert dialog
            function showAlert(message, alertType) {
                alertDialog.text = message
                // Adjust title based on alertType
                switch (alertType) {
                case "success":
                    alertDialog.title = "Success"
                    break
                case "warning":
                    alertDialog.title = "Warning"
                    break
                case "error":
                    alertDialog.title = "Error"
                    break
                default:
                    alertDialog.title = ""
                    break
                }
                
                alertDialog.open()
            }
            
            function getDataBit(databitIndex)
            {
                switch (databitIndex) {
                case "0":
                    return "5";
                case "1":
                    return "6";
                case "2":
                    return "7";
                case "3":
                    return "8";
                }
            }
            
            function getStopBit(stopBitIndex)
            {
                switch (stopBitIndex) {
                case "0":
                    return "1";
                case "1":
                    return "1.5";
                case "2":
                    return "2";
                }
            }
            
            function getPortname(portIndex)
            {
                switch (portIndex) {
                case "0":
                    return "PORT1 - RS485";
                case "1":
                    return "PORT2 - RS485";
                case "2":
                    return "PORT3 - RS422";
                case "3":
                    return "PORT4 - RS422";
                }
            }
            
            function getParity(parityIndex)
            {
                switch (parityIndex) {
                case "0":
                    return "No Parity";
                case "1":
                    return "Even Parity";
                case "2":
                    return "Odd Parity";
                }
            }
            
            Image {
                id: commandResponsedivider
                x: 414
                y: 96
                width: 90
                height: 2
                source: "../assets/images/divider.png"
                sourceSize.width: 120
                sourceSize.height: 4
            }
            
            Label {
                id: commandResponseLabel
                x: 50
                y: 168
                color: "#ffffff"
                text: qsTr("Start Command Response")
                font.pointSize: 16
                font.bold: true
            }
            RoundButton {
                x: 790
                y: 56
                width: 190
                height: 35
                radius: 8
                text: "<font color='#fff' size='5'>‚Üê</font> <font color='#fff'> Go Back </font>"
                highlighted: false
                flat: false
                background: Rectangle {
                    radius: 8
                    color: "#376CFB"
                }
                enabled: dataDump.isStarted ? false : true
                onClicked: {
                    appNavigation.handleNavigationButtonClick(
                                "goto_list_datadump")
                }
            }
            Rectangle {
                x: 330
                y: 163
                width: 246
                height: 35
                border.color: "black" // Set the border color
                border.width: 1 // Set the border width
                radius: 6
                clip: true
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                TextInput {
                    property string placeholderText: "Configuration name"
                    id: configurationNameInput
                    opacity: 0.7
                    visible: true
                    anchors.fill: parent
                    color: "#0b0b0b"
                    Text {
                        text: configurationNameInput.placeholderText
                        color: "#4c5359"
                        visible: !configurationNameInput.text
                        font.pixelSize: 14
                        // set padding to the left and top of the placeholder text
                        leftPadding: 10
                        topPadding: 8
                    }
    
                    font.pixelSize: 12
                    horizontalAlignment: Text.AlignLeft
                    verticalAlignment: Text.AlignVCenter
                    // placeholderText: "Configuration name"
                    text: commandResponse.commandResponse[1]
                    anchors.bottomMargin: 0
                    anchors.leftMargin: 0
                    anchors.topMargin: 0
                    anchors.rightMargin: 0
                    clip: true
                    leftPadding: 10
                    font.bold: true
                    MouseArea {
                        clip: true
                        anchors.fill: parent
                        anchors.rightMargin: 0
                        onClicked: {
                            virtualNumberKeyboard.visible = false
                            virtualKeyboard.visible = true
                            virtualKeyboard.inputField = configurationNameInput
                            configurationNameInput.cursorPosition = configurationNameInput.text.length
                            configurationNameInput.focus = true // Set focus to the TextInput
                        }
                    }
                }
            }
    
            Rectangle {
                x: 580
                y: 163
                width: 200
                height: 35
                border.color: "black" // Set the border color
                border.width: 1 // Set the border width
                radius: 6
                clip: true
                /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                TextInput {
                    property string placeholderText: "Periodicity (In milli seconds)"
                    id: periodicityInput
                    opacity: 0.7
                    visible: true
                    anchors.fill: parent
                    color: "#0b0b0b"
                    Text {
                        text: periodicityInput.placeholderText
                        color: "#4c5359"
                        visible: !periodicityInput.text
                        font.pixelSize: 14
                        leftPadding: 10
                        topPadding: 8
                    }
                    text: commandResponse.commandResponse[2]
    
                    font.pixelSize: 12
                    horizontalAlignment: Text.AlignLeft
                    verticalAlignment: Text.AlignVCenter
                    anchors.bottomMargin: 0
                    anchors.leftMargin: 0
                    anchors.topMargin: 0
                    anchors.rightMargin: 0
                    clip: true
                    leftPadding: 10
                    font.bold: true
                    MouseArea {
                        clip: true
                        anchors.fill: parent
                        anchors.rightMargin: 0
                        onClicked: {
                            virtualKeyboard.visible = false
                            virtualNumberKeyboard.visible = true
                            virtualNumberKeyboard.inputField = periodicityInput
                            periodicityInput.cursorPosition = periodicityInput.text.length
                            periodicityInput.focus = true // Set focus to the TextInput
                        }
                    }
                }
            }
           
            RoundButton {
                id: commandResponseButton
                x: 790
                y: 163
                width: 150
                height: 35
                radius: 8
                background: Rectangle {
                    radius: 8
                    color: dataDump.isStarted ? "#c91432" : "#138636"
                }
                onClicked: {
                    if (dataDump.isStarted) {
                        dataDump.stopDataDump()
                    } else {
                        dataDump.startDataDump(
                                    dataDump.configVals[0],
                                    dataDump.configVals[1],
                                    dataDump.configVals[2],
                                    dataDump.configVals[3],
                                    dataDump.configVals[4],
                                    dataDump.configVals[5]
                                    )
                    }
                }
                highlighted: false
                flat: false
            }
            
            Text {
                id: port1
                x: 50
                y: 230
                color: "#fffbfb"
                text: qsTr("Port 1 (RS485)")
                font.pixelSize: 15
                font.italic: false
                font.bold: true
                Rectangle {
                    x: 0
                    y: 20
                    width: 210
                    height: 35
                    radius: 6
                    border.color: "#000000"
                    border.width: 1
                    
                    Text {
                        id: isPortOneEnabled
                        x: 0
                        width: 210
                        height: 35
                        text: qsTr("Text")
                        font.pixelSize: 16
                        horizontalAlignment: Text.AlignHCenter
                        verticalAlignment: Text.AlignVCenter
                    }
                }
            }
            
            Text {
                id: port2
                x: 280
                y: 230
                width: 77
                height: 17
                color: "#ffffff"
                text: qsTr("Port 2 (RS485)")
                font.pixelSize: 15
                font.italic: false
                font.bold: true
                Rectangle {
                    x: 0
                    y: 20
                    width: 210
                    height: 35
                    radius: 6
                    border.color: "#000000"
                    border.width: 1
                    
                    Text {
                        id: isPortTwoEnabled
                        x: 0
                        y: 0
                        width: 210
                        height: 35
                        text: qsTr("Text")
                        font.pixelSize: 16
                        horizontalAlignment: Text.AlignHCenter
                        verticalAlignment: Text.AlignVCenter
                    }
                }
            }
            
            Text {
                id: port3
                x: 511
                y: 230
                width: 60
                height: 17
                color: "#ffffff"
                text: qsTr("Port 3 (RS422)")
                font.pixelSize: 15
                font.italic: false
                font.bold: true
                Rectangle {
                    x: 0
                    y: 20
                    width: 210
                    height: 35
                    radius: 6
                    border.color: "#000000"
                    border.width: 1
                    
                    Text {
                        id: isPortThreeEnabled
                        x: 0
                        y: 0
                        width: 210
                        height: 35
                        text: qsTr("Text")
                        font.pixelSize: 16
                        horizontalAlignment: Text.AlignHCenter
                        verticalAlignment: Text.AlignVCenter
                    }
                }
            }
            
            Text {
                id: port4
                x: 737
                y: 230
                width: 60
                color: "#ffffff"
                text: qsTr("Port 4 (RS422)")
                font.pixelSize: 15
                font.italic: false
                font.bold: true
                Rectangle {
                    x: 0
                    y: 20
                    width: 210
                    height: 35
                    radius: 6
                    border.color: "#000000"
                    border.width: 1
                    
                    Text {
                        id: isPortFourEnabled
                        x: 0
                        y: 0
                        width: 210
                        height: 35
                        text: qsTr("Text")
                        font.pixelSize: 16
                        horizontalAlignment: Text.AlignHCenter
                        verticalAlignment: Text.AlignVCenter
                    }
                }
            }
            
            
            Rectangle {
                width: 900
                height: 420
                x: 50
                y: 300
                color: "#0a0d2c"
                radius: 12
                
                Rectangle {
                    id: startedAtRectangle
                    x: 30
                    y: 30
                    width: 405
                    height: 165
                    color: "#e4e7fb"
                    radius: 12
                    
                    Label {
                        id: startedAtLabel
                        x: 30
                        y: 30
                        text: qsTr("Started At")
                        font.pointSize: 14
                    }
                    
                    Label {
                        id: startedAtTime
                        x: 40
                        y: 80
                        color: "#0a0d2c"
                        text: dataDump.startedAt
                        font.pointSize: 12
                    }
                }
                
                Rectangle {
                    id: runningForRectangle
                    x: 460
                    y: 30
                    width: 405
                    height: 165
                    color: "#e4e7fb"
                    radius: 12
                    Label {
                        id: runningForLabel
                        x: 30
                        y: 30
                        text: qsTr("Running For")
                        font.pointSize: 14
                    }
                    
                    Label {
                        id: runningFor
                        x: 40
                        y: 80
                        color: "#0a0d2c"
                        text: "00h 00m 00s"
                        font.pointSize: 12
                    }
                }
                
                Rectangle {
                    id: filesCreatedRectangle
                    x: 30
                    y: 220
                    width: 405
                    height: 165
                    color: "#e4e7fb"
                    radius: 12
                    Label {
                        id: filesCreatedLabel
                        x: 30
                        y: 30
                        text: qsTr("Files Created")
                        font.pointSize: 14
                    }
                    
                    Label {
                        id: filesCreated
                        x: 40
                        y: 80
                        color: "#0a0d2c"
                        text: "0"
                        font.pointSize: 12
                    }
                }
                
                
                Rectangle {
                    id: dataSizeRectangle
                    x: 460
                    y: 220
                    width: 405
                    height: 165
                    color: "#e4e7fb"
                    radius: 12
                    
                    Label {
                        id: fileSizeLabel
                        x: 30
                        y: 30
                        text: qsTr("Current File size")
                        font.pointSize: 14
                    }
                    
                    Label {
                        id: currentFileSize
                        x: 40
                        y: 80
                        color: "#0a0d2c"
                        text: "0 bytes"
                        font.pointSize: 12
                    }
                }
            }
            
        }
        
    }
}
